import kotlin.Boolean;

CREATE TABLE IF NOT EXISTS mediaEntity (
  id TEXT PRIMARY KEY NOT NULL,
  mediaType TEXT DEFAULT NULL,
  englishTitle TEXT DEFAULT NULL,
  romajiTitle TEXT DEFAULT NULL,
  nativeTitle TEXT DEFAULT NULL,
  coverImageExtraLarge TEXT DEFAULT NULL,
  coverImageLarge TEXT DEFAULT NULL,
  coverImageMedium TEXT DEFAULT NULL,
  coverImageColor TEXT DEFAULT NULL,
  description TEXT DEFAULT NULL,
  episodes INTEGER DEFAULT NULL,
  seasonYear INTEGER DEFAULT NULL,
  season TEXT DEFAULT NULL,
  source TEXT DEFAULT NULL,
  status TEXT DEFAULT NULL,
  hashtag TEXT DEFAULT NULL,
  bannerImage TEXT DEFAULT NULL,
  averageScore INTEGER DEFAULT NULL,
  trailerId TEXT DEFAULT NULL,
  trailerSite TEXT DEFAULT NULL,
  trailerThumbnail TEXT DEFAULT NULL,
  genres TEXT DEFAULT NULL,
  format TEXT DEFAULT NULL,
  trending INTEGER DEFAULT NULL,
  favourites INTEGER DEFAULT NULL,
  popularRanking INTEGER DEFAULT NULL,
  ratedRanking INTEGER DEFAULT NULL,
  nextAiringEpisode INTEGER DEFAULT NULL,
  timeUntilAiring INTEGER DEFAULT NULL,
  isFavourite INTEGER AS Boolean DEFAULT NULL ,
  siteUrl TEXT DEFAULT NULL
);

getAllMedias:
SELECT * FROM mediaEntity;

getMedia:
SELECT * FROM mediaEntity WHERE id = ?;

getMediaListById:
SELECT * FROM mediaEntity WHERE id IN ?;

upsertMedia:
INSERT INTO mediaEntity (
  id,
  mediaType,
  englishTitle,
  romajiTitle,
  nativeTitle,
  coverImageExtraLarge,
  coverImageLarge,
  coverImageMedium,
  coverImageColor,
  description,
  episodes,
  seasonYear,
  season,
  source,
  status,
  hashtag,
  bannerImage,
  averageScore,
  trailerId,
  trailerSite,
  trailerThumbnail,
  genres,
  format,
  trending,
  favourites,
  popularRanking,
  ratedRanking,
  nextAiringEpisode,
  timeUntilAiring,
  isFavourite,
  siteUrl
) VALUES ?
ON CONFLICT(id) DO UPDATE SET
  mediaType            = excluded.mediaType,
  englishTitle         = excluded.englishTitle,
  romajiTitle          = excluded.romajiTitle,
  nativeTitle          = excluded.nativeTitle,
  coverImageExtraLarge = excluded.coverImageExtraLarge,
  coverImageLarge      = excluded.coverImageLarge,
  coverImageMedium     = excluded.coverImageMedium,
  coverImageColor      = excluded.coverImageColor,
  description          = excluded.description,
  episodes             = excluded.episodes,
  seasonYear           = excluded.seasonYear,
  season               = excluded.season,
  source               = excluded.source,
  status               = excluded.status,
  hashtag              = excluded.hashtag,
  bannerImage          = excluded.bannerImage,
  averageScore         = excluded.averageScore,
  trailerId            = excluded.trailerId,
  trailerSite          = excluded.trailerSite,
  trailerThumbnail     = excluded.trailerThumbnail,
  genres               = excluded.genres,
  format               = excluded.format,
  trending             = excluded.trending,
  favourites           = excluded.favourites,
  popularRanking       = excluded.popularRanking,
  ratedRanking         = excluded.ratedRanking,
  nextAiringEpisode    = excluded.nextAiringEpisode,
  timeUntilAiring      = excluded.timeUntilAiring,
  isFavourite          = excluded.isFavourite,
  siteUrl              = excluded.siteUrl;
